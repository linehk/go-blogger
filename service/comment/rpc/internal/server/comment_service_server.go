// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package server

import (
	"context"

	"github.com/linehk/go-blogger/service/comment/rpc/comment"
	"github.com/linehk/go-blogger/service/comment/rpc/internal/logic"
	"github.com/linehk/go-blogger/service/comment/rpc/internal/svc"
)

type CommentServiceServer struct {
	svcCtx *svc.ServiceContext
	comment.UnimplementedCommentServiceServer
}

func NewCommentServiceServer(svcCtx *svc.ServiceContext) *CommentServiceServer {
	return &CommentServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *CommentServiceServer) List(ctx context.Context, in *comment.ListReq) (*comment.ListResp, error) {
	l := logic.NewListLogic(ctx, s.svcCtx)
	return l.List(in)
}

func (s *CommentServiceServer) Get(ctx context.Context, in *comment.GetReq) (*comment.Comment, error) {
	l := logic.NewGetLogic(ctx, s.svcCtx)
	return l.Get(in)
}

func (s *CommentServiceServer) Approve(ctx context.Context, in *comment.ApproveReq) (*comment.Comment, error) {
	l := logic.NewApproveLogic(ctx, s.svcCtx)
	return l.Approve(in)
}

func (s *CommentServiceServer) Delete(ctx context.Context, in *comment.DeleteReq) (*comment.EmptyResp, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *CommentServiceServer) ListByBlog(ctx context.Context, in *comment.ListByBlogReq) (*comment.ListByBlogResp, error) {
	l := logic.NewListByBlogLogic(ctx, s.svcCtx)
	return l.ListByBlog(in)
}

func (s *CommentServiceServer) MarkAsSpam(ctx context.Context, in *comment.MarkAsSpamReq) (*comment.Comment, error) {
	l := logic.NewMarkAsSpamLogic(ctx, s.svcCtx)
	return l.MarkAsSpam(in)
}

func (s *CommentServiceServer) RemoveContent(ctx context.Context, in *comment.RemoveContentReq) (*comment.Comment, error) {
	l := logic.NewRemoveContentLogic(ctx, s.svcCtx)
	return l.RemoveContent(in)
}
