// Code generated by goctl. DO NOT EDIT.
// Source: blog.proto

package blogservice

import (
	"context"

	"github.com/linehk/go-blogger/service/blog/rpc/blog"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Blog             = blog.Blog
	BlogUserInfo     = blog.BlogUserInfo
	BlogUserInfos    = blog.BlogUserInfos
	BlogUserInfosReq = blog.BlogUserInfosReq
	Count            = blog.Count
	GetByUrlReq      = blog.GetByUrlReq
	GetPageViewsReq  = blog.GetPageViewsReq
	GetReq           = blog.GetReq
	ListByUserReq    = blog.ListByUserReq
	ListByUserResp   = blog.ListByUserResp
	PageViews        = blog.PageViews
	Pages            = blog.Pages
	Posts            = blog.Posts
	PostsItems       = blog.PostsItems

	BlogService interface {
		Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*Blog, error)
		GetByUrl(ctx context.Context, in *GetByUrlReq, opts ...grpc.CallOption) (*Blog, error)
		ListByUser(ctx context.Context, in *ListByUserReq, opts ...grpc.CallOption) (*ListByUserResp, error)
		GetBlogUserInfos(ctx context.Context, in *BlogUserInfosReq, opts ...grpc.CallOption) (*BlogUserInfos, error)
		GetPageViews(ctx context.Context, in *GetPageViewsReq, opts ...grpc.CallOption) (*PageViews, error)
	}

	defaultBlogService struct {
		cli zrpc.Client
	}
)

func NewBlogService(cli zrpc.Client) BlogService {
	return &defaultBlogService{
		cli: cli,
	}
}

func (m *defaultBlogService) Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*Blog, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}

func (m *defaultBlogService) GetByUrl(ctx context.Context, in *GetByUrlReq, opts ...grpc.CallOption) (*Blog, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.GetByUrl(ctx, in, opts...)
}

func (m *defaultBlogService) ListByUser(ctx context.Context, in *ListByUserReq, opts ...grpc.CallOption) (*ListByUserResp, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.ListByUser(ctx, in, opts...)
}

func (m *defaultBlogService) GetBlogUserInfos(ctx context.Context, in *BlogUserInfosReq, opts ...grpc.CallOption) (*BlogUserInfos, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.GetBlogUserInfos(ctx, in, opts...)
}

func (m *defaultBlogService) GetPageViews(ctx context.Context, in *GetPageViewsReq, opts ...grpc.CallOption) (*PageViews, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.GetPageViews(ctx, in, opts...)
}
