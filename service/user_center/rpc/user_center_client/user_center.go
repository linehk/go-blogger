// Code generated by goctl. DO NOT EDIT.
// Source: user_center.proto

package user_center_client

import (
	"context"

	"github.com/linehk/go-blogger/service/user_center/rpc/user_center"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = user_center.Request
	Response = user_center.Response

	UserCenter interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultUserCenter struct {
		cli zrpc.Client
	}
)

func NewUserCenter(cli zrpc.Client) UserCenter {
	return &defaultUserCenter{
		cli: cli,
	}
}

func (m *defaultUserCenter) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := user_center.NewUserCenterClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
